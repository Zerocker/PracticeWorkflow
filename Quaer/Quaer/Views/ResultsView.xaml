<UserControl x:Class="Quaer.Views.ResultsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:resx="clr-namespace:Quaer.Properties"
             xmlns:util="clr-namespace:Quaer.Utils"
             util:Translation.ResourceManager = "{x:Static resx:Resources.ResourceManager}"
             mc:Ignorable="d">
    
    <GroupBox Header="{util:Loc RV_Header}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="12*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>

            <DataGrid
                Grid.Row="0"
                Margin="2 8 2 2"
                VerticalGridLinesBrush="LightGray"
                AutoGenerateColumns="False"
                RowBackground="White"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                CanUserAddRows="False"
                ItemsSource="{Binding Results}"
                SelectedItem="{Binding SelectedResult, Mode=TwoWay}"
                RowHeaderWidth="0"
                IsEnabled="{Binding Enabled, Mode=OneWay}"
                RowDetailsVisibilityMode="VisibleWhenSelected"
                MouseDown="DataGrid_MouseDown">

                <DataGrid.Resources>
                    <Style TargetType = "{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                <Setter Property="Background" Value="LightSkyBlue" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="ColumnWarpText" TargetType="{x:Type TextBlock}">
                        <Setter Property="TextWrapping" Value="Wrap"/>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="{util:Loc RV_ColumnQuery}" 
                                        Width="1.5*" Binding="{Binding Path=Query}"
                                        ElementStyle="{StaticResource ColumnWarpText}"/>

                    <DataGridTextColumn Header="{util:Loc RV_ColumnTitle}"  
                                        Width="2*" Binding="{Binding Path=Title}"
                                        ElementStyle="{StaticResource ColumnWarpText}"/>

                    <DataGridTextColumn Header="{util:Loc RV_ColumnLink}" 
                                        Width="4*" Binding="{Binding Path=Link}"
                                        ElementStyle="{StaticResource ColumnWarpText}"/>
                </DataGrid.Columns>

                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <Grid>
                            <TextBlock Width="{Binding ActualWidth, ElementName=ResultsGroupBox}" 
                                       Text="{Binding Path=Description}" Margin="12" TextWrapping="Wrap"/>
                        </Grid>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>

                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="{util:Loc RV_MenuCopy}" Command="{Binding MenuCopyCommand}" />
                        <MenuItem Header="{util:Loc RV_MenuOpen}"  Command="{Binding MenuOpenCommand}"/>
                        <Separator />
                        <MenuItem Header="{util:Loc RV_MenuRemove}"  Command="{Binding MenuRemoveCommand}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>

            <DockPanel
                    Grid.Row="1"
                    Margin="4 2 4 2"
                    HorizontalAlignment="Stretch"
                    LastChildFill="False">
                <DockPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Width" Value="72" />
                        <Setter Property="Height" Value="24" />
                        <Setter Property="Margin" Value="8 0 4 0" />
                        <Setter Property="DockPanel.Dock" Value="Right" />
                    </Style>
                </DockPanel.Resources>

                <Button Command="{Binding StopCommand}" Content="{util:Loc RV_ButtonStop}" />
                
                <Button Command="{Binding SaveCommand}" Content="{util:Loc RV_ButtonSave}"
                        IsEnabled="{Binding Enabled, Mode=OneWay}"/>
                
                <Button Command="{Binding ClearCommand}" Content="{util:Loc RV_ButtonClear}"
                        IsEnabled="{Binding Enabled, Mode=OneWay}"/>
                
                <Button Command="{Binding StartCommand}" Content="{util:Loc RV_ButtonStart}"
                        IsEnabled="{Binding Enabled, Mode=OneWay}"/> 
            </DockPanel>
        </Grid>
    </GroupBox>
</UserControl>
